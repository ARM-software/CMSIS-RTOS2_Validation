name: CMSIS-RTOS2 Validation running on Arm Virtual Hardware
on:
  push:
    branches: [ armlab ]
    paths:
      - .github/workflows/cmsis_rv2.yml
      - Include/**/*
      - Project/**/*
      - Source/**/*
  pull_request:
    paths:
      - .github/workflows/cmsis_rv2.yml
      - Include/**/*
      - Project/**/*
      - Source/**/*
  workflow_dispatch:

jobs:
  ci_test:
    runs-on: Arm-Virtual-Hardware

    env:
      CMSIS_PACK_ROOT: /tmp/.packs-${{ github.run_id }}

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Check out repository code
      uses: actions/checkout@v3

    - name: Install CMake
      run: |
        wget https://github.com/Kitware/CMake/releases/download/v3.25.1/cmake-3.25.1-linux-x86_64.tar.gz
        tar -xf cmake-3.25.1-linux-x86_64.tar.gz
        sudo mv cmake-3.25.1-linux-x86_64 /opt/cmake-3.25.1
        sudo ln -s /opt/cmake-3.25.1/bin/cmake /usr/local/bin/cmake

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip' # caching pip dependencies

    - name: Cache pack folder
      id: cache-packs
      uses: actions/cache@v3
      with:
        key: packs-${{ github.run_id }}
        restore-keys: |
          packs-
        path: /tmp/.packs-${{ github.run_id }}

    - name: Install CMSIS-Toolbox
      run: |
        wget https://github.com/Open-CMSIS-Pack/cmsis-toolbox/releases/download/1.5.0/cmsis-toolbox-linux-amd64.tar.gz
        tar -C /opt -xf cmsis-toolbox-linux-amd64.tar.gz
        echo "/opt/cmsis-toolbox-linux-amd64/bin" >> $GITHUB_PATH

    - name: Initialize packs folder
      if: steps.cache-packs.outputs.cache-hit != 'true'
      run: cpackget init https://www.keil.com/pack/index.pidx

    - name: Update pack index
      if: steps.cache-packs.outputs.cache-hit == 'true'
      run: cpackget update-index

    - name: Install build.py requirements
      run: pip install -r requirements.txt
      working-directory: Project

    - name: Build and run projects
      working-directory: Project
      run: |
        python build.py --verbose build run || echo "Something failed!"

    - name: Archive results
      uses: actions/upload-artifact@v2
      with:
        name: results
        path: |
          Project/RTOS2_Validation-*.zip
          Project/RTOS2_Validation-*.junit
        retention-days: 1
        if-no-files-found: error
      if: always()

#    - name: Publish test results
#      uses: mikepenz/action-junit-report@v3
#      with:
#        check_name: "Test results"
#        report_paths: Project/RTOS2_Validation-*.junit
#      if: always()
