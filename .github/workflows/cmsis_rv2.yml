# The repository needs to provide the following secrets
# - AWS_ACCESS_KEY_ID           The id of the access key.
# - AWS_SECRET_ACCESS_KEY       The access key secret.
# - AWS_DEFAULT_REGION          The data center region to be used.
# - AWS_S3_BUCKET_NAME          The id of the S3 storage bucket to be used to data exchange.
# - AWS_IAM_PROFILE             The IAM profile to be used.
# - AWS_SECURITY_GROUP_ID       The id of the security group to add the EC2 instance to.
# - AWS_SUBNET_ID               The id of the network subnet to connect the EC2 instance to.

name: CMSIS-RTOS2 Validation running on Arm Virtual Hardware
on:
  push:
    branches: [ main ]
    paths:
      - .github/workflows/cmsis_rv2.yml
      - Include/**/*
      - Project/**/*
      - Source/**/*
  pull_request:
    branches: [ main ]
    paths:
      - .github/workflows/cmsis_rv2.yml
      - Include/**/*
      - Project/**/*
      - Source/**/*

# To allow you to run this workflow manually from the GitHub Actions tab add
  workflow_dispatch:

env:
  # VHT-AMI expects those environments be presented.
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
jobs:
  ci_test:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2

#    - name: Install Python packages
#      run: pip install -r basic/requirements.txt

    - name: Sync workspace
      run: |
        rsync -rR Include ./vht/Include
        rsync -rR Project ./vht/Project
        rsync -rR Source ./vht/Source

    - uses: ARM-Software/VHT-AMI@v2.1
      id: vht
      with:
        ec2_instance_type: t2.micro
        ec2_security_group_id: ${{ secrets.AWS_SECURITY_GROUP_ID }}
        iam_profile: ${{ secrets.AWS_IAM_PROFILE }}
        s3_bucket_name: ${{ secrets.AWS_S3_BUCKET_NAME }}
        subnet_id: ${{ secrets.AWS_SUBNET_ID }}
        terminate_ec2_instance: 'true'
        vht_ami_version: '1.1.0'
        vht_in: ./vht/

    - name: Fetch results from VHT
      id: result
      run: |
          tar xvzf out.tar
          ls -lah ./home/ubuntu/vhtwork/out

    - name: Archive results
      uses: actions/upload-artifact@v2
      with:
        name: results
        path: |
          ./home/ubuntu/vhtwork/out
        retention-days: 1
        if-no-files-found: error
      if: always()

#    - name: Publish test results
#      uses: mikepenz/action-junit-report@v2
#      with:
#        check_name: "Test results"
#        report_paths: basic/basic-*.xunit

