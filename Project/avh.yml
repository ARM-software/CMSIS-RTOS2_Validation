name: "RTOS2 Validation"
workdir: ../
backend:
  aws:
    ami-version: ~=1.3
    instance-type: t2.micro
upload:
  - ARM.CMSIS-RTOS2_Validation.pdsc
  - LICENSE.txt
  - README.md
  - Include/**/*
  - Layer/**/*
  - Project/**/*
  - -:Project/Validation-*.zip
  - -:Project/Validation-*.junit
  - -:Project/Validation.*/**/*
  - Source/**/*
steps:
  - run: |
      pushd ${HOME}
      git clone https://github.com/ARM-software/CMSIS_6.git
      git clone https://github.com/ARM-software/CMSIS-RTX.git
      git clone https://github.com/ARM-software/CMSIS-FreeRTOS.git
      popd

  - run: |
      # Print working directory
      echo "PWD : $(pwd)"

      # Remove default environment variables
      unset CMSIS_BUILD_ROOT
      unset CMSIS_COMPILER_ROOT

      # Remove ctools from PATH
      export PATH=$(echo $PATH | awk -v RS=: -v ORS=: '/\/opt\/ctools\/bin/ {next} {print}' | sed 's/:$//')

      # Enter project directory
      cd Project
      
      # Upgrade pip and install python packages
      python -m pip install --upgrade pip
      pip install -r requirements.txt 2>&1 || exit 1
      
      # Install vcpkg
      . <(curl https://aka.ms/vcpkg-init.sh -L)
      
      # Activate vcpkg environment (install cmsis-toolbox and compilers)
      vcpkg activate --project vcpkg-configuration.json

      # Register tools license
      export ARM_TOOL_VARIANT=ult

      # Check environment variables and paths
      printenv

      # Check tools
      echo "AC6       : $(which armclang)"
      echo "GCC       : $(which arm-none-eabi-gcc)"
      echo "cbuild    : $(which cbuild)"
      echo "cpackget  : $(which cpackget)"
      echo "csolution : $(which csolution)"

      # Register local packs
      cpackget add ${HOME}/CMSIS_6/ARM.CMSIS.pdsc 2>&1
      cpackget add ${HOME}/CMSIS-RTX/ARM.CMSIS-RTX.pdsc 2>&1
      cpackget add ${HOME}/CMSIS-FreeRTOS/ARM.CMSIS-FreeRTOS.pdsc 2>&1
      
      # Update public pack index, download and install CMSIS packs
      cpackget update-index 2>&1
      cpackget add Keil::V2M-MPS2_CMx_BSP@1.8.0 2>&1
      cpackget add Keil::V2M-MPS2_IOTKit_BSP@1.5.0 2>&1
      cpackget add ARM::V2M_MPS3_SSE_300_BSP@1.3.0 2>&1

      
      # Execute tests
      python build.py --verbose build run 2>&1 || echo "Something failed!"
download:
  - Project/Validation-*.zip
  - Project/Validation-*.junit
